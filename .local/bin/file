#!/usr/bin/env ocaml

Topdirs.dir_directory (Sys.getenv "OCAML_TOPLEVEL_PATH");;
#use "topfind";;
#require "extunix";;

module U = ExtUnix.Specific

let bwrap = "bwrap"

let () =
  let args =
    Array.sub Sys.argv 1 (Array.length Sys.argv - 1)
    |> Array.to_list
  in
  let args =
    [
      bwrap;
      "--proc"; "/proc";
      "--dev"; "/dev";
      "--tmpfs"; "/tmp";
      "--ro-bind"; "/usr"; "/usr";
      "--symlink"; "usr/lib"; "/lib";
      "--symlink"; "usr/lib64"; "/lib64";
      "--symlink"; "usr/bin"; "/bin";
      "--symlink"; "usr/sbin"; "/sbin";
      "--ro-bind"; "/etc"; "/etc";
      "--tmpfs"; "/run";
      "--unshare-all";
      "--new-session";
    ]
    @
    List.concat_map (fun x -> if Sys.file_exists x then ["--ro-bind"; U.realpath x; U.realpath x] else []) args
    @
    ["/usr/bin/file"]
    @
    List.map (fun x -> if Sys.file_exists x then U.realpath x else x) args
  in
  Unix.execvp bwrap (Array.of_list args)

